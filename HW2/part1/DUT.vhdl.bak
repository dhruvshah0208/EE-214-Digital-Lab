-- A DUT entity is used to wrap your design.
--  This example shows how you can do this for the
--  Full-adder.

library ieee;
use ieee.std_logic_1164.all;
entity DUT is
   port(input_vector: in std_logic_vector(6 downto 0);
        output_vector: out std_logic_vector(0 downto 0));
end entity;

architecture DutWrap of DUT is
   component muxx is
    port(EN: in std_logic;
	 S: in std_logic_vector(1 downto 0);
			I: in std_logic_vector(3 downto 0);
			O: out std_logic);
   end component;
begin

   -- input/output vector element ordering is critical,
   -- and must match the ordering in the trace file!
   add_instance: muxx
			port map (
					-- order of inputs Cin B A
					I => input_vector(6 downto 3),
					S => input_vector(2 downto 1),
					
					EN => input_vector(0),
					O => output_vector(0));

end DutWrap;

